https://www.acmicpc.net/problem/15961

import java.util.*;
import java.io.*;

public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
    static StringTokenizer st;
    static long max = Long.MIN_VALUE;
    static long min = Long.MAX_VALUE;
    static int n, m;
    static StringBuilder sb;
    static int idx = 0;
    static final int MOD = 1000000;

    public static void main(String[] args) throws IOException {
        st = new StringTokenizer(br.readLine());
        n = Integer.parseInt(st.nextToken());
        m = Integer.parseInt(st.nextToken());
        int sn = Integer.parseInt(st.nextToken());
        int coup = Integer.parseInt(st.nextToken());

        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = Integer.parseInt(br.readLine());
        }

        HashSet<Integer> set = new HashSet<>();
        int[] cnt = new int[m+1];
        int max = Integer.MIN_VALUE;

        for (int i = 0; i < sn; i++) {
            set.add(arr[i]);
            cnt[arr[i]]++;
        }
        if (!set.contains(coup))
            max = Math.max(max, set.size()+1);
        else
            max = Math.max(max, set.size());

        for (int i = 1; i < n; i++) {
            cnt[arr[i-1]]--;
            if (cnt[arr[i-1]] == 0)
                set.remove(arr[i-1]);

            int end = i - 1 + sn;
            if (end >= n)
                end -= n;
            cnt[arr[end]]++;
            set.add(arr[end]);

            if (!set.contains(coup))
                max = Math.max(max, set.size()+1);
            else
                max = Math.max(max, set.size());
        }

        System.out.println(max);
    }
}
